/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OrganizationController,
  OrganizationControllerInterface,
} from "../../contracts/OrganizationController";

const _abi = [
  {
    inputs: [],
    name: "InvalidOrganizationId",
    type: "error",
  },
  {
    inputs: [],
    name: "OrganizationsPerAddressLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressCannotBeAdmin",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "imageCID",
        type: "bytes",
      },
    ],
    name: "OrganizationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldImageCID",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newImageCID",
        type: "bytes",
      },
    ],
    name: "OrganizationImageCIDChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "OrganizationNameChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "adminOf",
    outputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "imageCID",
        type: "bytes",
      },
    ],
    name: "createOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "organizationIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "organizations",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "imageCID",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalOrganizations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "newImageCID",
        type: "bytes",
      },
    ],
    name: "updateImageCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "updateName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361002c565b6000805460ff60a01b1916905561007c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111798061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636cc5af29116100975780638da5cb5b116100665780638da5cb5b146101dc578063e792dd8a146101ed578063edd76d0514610210578063f2fde38b1461023057600080fd5b80636cc5af29146101a6578063715018a6146101b9578063767e582e146101c15780638456cb59146101d457600080fd5b806353e76f2c116100d357806353e76f2c146101435780635537a6fa1461015657806359459f0e146101815780635c975abb1461019457600080fd5b80633f4ba83a146100fa5780634cf5d552146101045780634f558e7914610120575b600080fd5b610102610243565b005b61010d60035481565b6040519081526020015b60405180910390f35b61013361012e366004610c61565b610255565b6040519015158152602001610117565b610102610151366004610cc3565b61026e565b610169610164366004610c61565b6103db565b6040516001600160a01b039091168152602001610117565b61010261018f366004610cc3565b610422565b600054600160a01b900460ff16610133565b6101026101b4366004610d2b565b61057b565b6101026106c5565b6101026101cf366004610d57565b6106d7565b610102610879565b6000546001600160a01b0316610169565b6102006101fb366004610c61565b610889565b6040516101179493929190610e09565b61010d61021e366004610e4f565b60026020526000908152604090205481565b61010261023e366004610e4f565b6109ca565b61024b610a5f565b610253610ab9565b565b6000600354821115801561026857508115155b92915050565b610276610b0e565b8261028081610255565b61029d576040516312485c8960e11b815260040160405180910390fd5b6000818152600160205260409020600301546001600160a01b031633146102d6576040516282b42960e81b815260040160405180910390fd5b600084815260016020819052604082200180546102f290610e71565b80601f016020809104026020016040519081016040528092919081815260200182805461031e90610e71565b801561036b5780601f106103405761010080835404028352916020019161036b565b820191906000526020600020905b81548152906001019060200180831161034e57829003601f168201915b505050505090508383600160008881526020019081526020016000206001019182610397929190610f10565b50847fb5929b76d8a9106e5191d6484bfec92bf3aad66cec348a40bf2c24ab30170e4a8286866040516103cc93929190610ffa565b60405180910390a25050505050565b60006103e682610255565b610403576040516312485c8960e11b815260040160405180910390fd5b506000908152600160205260409020600301546001600160a01b031690565b61042a610b0e565b8261043481610255565b610451576040516312485c8960e11b815260040160405180910390fd5b6000818152600160205260409020600301546001600160a01b0316331461048a576040516282b42960e81b815260040160405180910390fd5b600084815260016020526040812060020180546104a690610e71565b80601f01602080910402602001604051908101604052809291908181526020018280546104d290610e71565b801561051f5780601f106104f45761010080835404028352916020019161051f565b820191906000526020600020905b81548152906001019060200180831161050257829003601f168201915b50505060008881526001602052604090209293505060029091019050610546848683610f10565b50847f5f2adde33903cdbdcc3d653702ed8f954dacf6edcca75f73d31eeeefa61e5b2a8286866040516103cc93929190610ffa565b610583610b0e565b8161058d81610255565b6105aa576040516312485c8960e11b815260040160405180910390fd5b6000818152600160205260409020600301546001600160a01b031633146105e3576040516282b42960e81b815260040160405180910390fd5b6001600160a01b038216610623576040517fb6b8b2a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0382166000908152600260205260409020541561065a5760405163a430873f60e01b815260040160405180910390fd5b600083815260016020526040808220600301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590519091339186917f900f0b7d796ac23c299d8b9ea7a0f715aad3bb4e1f5afd2000cdf36d82de42a291a4505050565b6106cd610a5f565b6102536000610b68565b6106df610b0e565b336000908152600260205260409020541561070d5760405163a430873f60e01b815260040160405180910390fd5b600060036000815461071e9061102a565b9190508190559050604051806080016040528082815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f870181900481028201810190925285815291810191908690869081908401838280828437600092018290525093855250503360209384015250838152600180835260409091208351815591830151908201906107d49082611051565b50604082015160028201906107e99082611051565b50606091909101516003909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905533600081815260026020526040908190208390555182907f0e495a78e01f57e15768b90aee1976ba20bae3dbee3a5ebc3a173ae5532334b99061086a908990899089908990611111565b60405180910390a35050505050565b610881610a5f565b610253610bc5565b6001602081905260009182526040909120805491810180546108aa90610e71565b80601f01602080910402602001604051908101604052809291908181526020018280546108d690610e71565b80156109235780601f106108f857610100808354040283529160200191610923565b820191906000526020600020905b81548152906001019060200180831161090657829003601f168201915b50505050509080600201805461093890610e71565b80601f016020809104026020016040519081016040528092919081815260200182805461096490610e71565b80156109b15780601f10610986576101008083540402835291602001916109b1565b820191906000526020600020905b81548152906001019060200180831161099457829003601f168201915b505050600390930154919250506001600160a01b031684565b6109d2610a5f565b6001600160a01b038116610a535760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610a5c81610b68565b50565b6000546001600160a01b031633146102535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a4a565b610ac1610c08565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054600160a01b900460ff16156102535760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610a4a565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610bcd610b0e565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610af13390565b600054600160a01b900460ff166102535760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610a4a565b600060208284031215610c7357600080fd5b5035919050565b60008083601f840112610c8c57600080fd5b50813567ffffffffffffffff811115610ca457600080fd5b602083019150836020828501011115610cbc57600080fd5b9250929050565b600080600060408486031215610cd857600080fd5b83359250602084013567ffffffffffffffff811115610cf657600080fd5b610d0286828701610c7a565b9497909650939450505050565b80356001600160a01b0381168114610d2657600080fd5b919050565b60008060408385031215610d3e57600080fd5b82359150610d4e60208401610d0f565b90509250929050565b60008060008060408587031215610d6d57600080fd5b843567ffffffffffffffff80821115610d8557600080fd5b610d9188838901610c7a565b90965094506020870135915080821115610daa57600080fd5b50610db787828801610c7a565b95989497509550505050565b6000815180845260005b81811015610de957602081850181015186830182015201610dcd565b506000602082860101526020601f19601f83011685010191505092915050565b848152608060208201526000610e226080830186610dc3565b8281036040840152610e348186610dc3565b9150506001600160a01b038316606083015295945050505050565b600060208284031215610e6157600080fd5b610e6a82610d0f565b9392505050565b600181811c90821680610e8557607f821691505b602082108103610ea557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b601f821115610f0b57600081815260208120601f850160051c81016020861015610ee85750805b601f850160051c820191505b81811015610f0757828155600101610ef4565b5050505b505050565b67ffffffffffffffff831115610f2857610f28610eab565b610f3c83610f368354610e71565b83610ec1565b6000601f841160018114610f705760008515610f585750838201355b600019600387901b1c1916600186901b178355610fca565b600083815260209020601f19861690835b82811015610fa15786850135825560209485019460019092019101610f81565b5086821015610fbe5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60408152600061100d6040830186610dc3565b8281036020840152611020818587610fd1565b9695505050505050565b60006001820161104a57634e487b7160e01b600052601160045260246000fd5b5060010190565b815167ffffffffffffffff81111561106b5761106b610eab565b61107f816110798454610e71565b84610ec1565b602080601f8311600181146110b4576000841561109c5750858301515b600019600386901b1c1916600185901b178555610f07565b600085815260208120601f198616915b828110156110e3578886015182559484019460019091019084016110c4565b50858210156111015787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b604081526000611125604083018688610fd1565b8281036020840152611138818587610fd1565b97965050505050505056fea2646970667358221220fd45e52de55d564f878e9782bb9a9177a5cb20e2f8e9e5b5281a3c478c6b8df964736f6c63430008110033";

type OrganizationControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganizationControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrganizationController__factory extends ContractFactory {
  constructor(...args: OrganizationControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrganizationController> {
    return super.deploy(overrides || {}) as Promise<OrganizationController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrganizationController {
    return super.attach(address) as OrganizationController;
  }
  override connect(signer: Signer): OrganizationController__factory {
    return super.connect(signer) as OrganizationController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganizationControllerInterface {
    return new utils.Interface(_abi) as OrganizationControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrganizationController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OrganizationController;
  }
}
