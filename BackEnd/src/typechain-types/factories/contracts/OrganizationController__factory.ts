/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  OrganizationController,
  OrganizationControllerInterface,
} from "../../contracts/OrganizationController";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOrganizationId",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [],
    name: "OrganizationsPerAddressLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddressCannotBeAdmin",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "imageCID",
        type: "bytes",
      },
    ],
    name: "OrganizationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "oldImageCID",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "newImageCID",
        type: "bytes",
      },
    ],
    name: "OrganizationImageCIDChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "OrganizationNameChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "adminOf",
    outputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "imageCID",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "createOrganization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "organizationIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "organizations",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "imageCID",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalOrganizations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "newImageCID",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "updateImageCID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "orgId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "updateName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61014060405234801561001157600080fd5b506040518060400160405280601781526020017f4f7267616e697a6174696f6e20436f6e74726f6c6c6572000000000000000000815250604051806040016040528060018152602001603160f81b81525061007861007361012e60201b60201c565b610132565b6000805460ff60a01b19169055815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c052610120525050600380546001600160a01b03191633179055506101829050565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60805160a05160c05160e05161010051610120516119c86101d16000396000611062015260006110b10152600061108c01526000610fe50152600061100f0152600061103901526119c86000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80636cc5af29116100b25780638da5cb5b11610081578063edd76d0511610066578063edd76d05146102ae578063ef5235d3146102ce578063f2fde38b146102e157600080fd5b80638da5cb5b1461027a578063e792dd8a1461028b57600080fd5b80636cc5af2914610244578063715018a61461025757806382e885cf1461025f5780638456cb591461027257600080fd5b80634f558e79116101095780635537a6fa116100ee5780635537a6fa146101e25780635c975abb146101f55780636c19e7831461020757600080fd5b80634f558e79146101ac57806353e76f2c146101cf57600080fd5b8063141a468c1461013b578063238ac9331461016e5780633f4ba83a146101995780634cf5d552146101a3575b600080fd5b61015b61014936600461136d565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b600354610181906001600160a01b031681565b6040516001600160a01b039091168152602001610165565b6101a16102f4565b005b61015b60055481565b6101bf6101ba36600461136d565b610306565b6040519015158152602001610165565b6101a16101dd3660046113c8565b61031f565b6101816101f036600461136d565b61048c565b600054600160a01b900460ff166101bf565b6101a1610215366004611430565b6003805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6101a1610252366004611452565b6104d3565b6101a161061d565b6101a161026d366004611494565b61062f565b6101a1610888565b6000546001600160a01b0316610181565b61029e61029936600461136d565b610898565b60405161016594939291906115c7565b61015b6102bc366004611430565b60026020526000908152604090205481565b6101a16102dc36600461160d565b6109d9565b6101a16102ef366004611430565b610cb4565b6102fc610d49565b610304610da3565b565b6000600554821115801561031957508115155b92915050565b610327610df8565b8261033181610306565b61034e576040516312485c8960e11b815260040160405180910390fd5b6000818152600160205260409020600301546001600160a01b03163314610387576040516282b42960e81b815260040160405180910390fd5b600084815260016020819052604082200180546103a3906116b0565b80601f01602080910402602001604051908101604052809291908181526020018280546103cf906116b0565b801561041c5780601f106103f15761010080835404028352916020019161041c565b820191906000526020600020905b8154815290600101906020018083116103ff57829003601f168201915b505050505090508383600160008881526020019081526020016000206001019182610448929190611739565b50847fb5929b76d8a9106e5191d6484bfec92bf3aad66cec348a40bf2c24ab30170e4a82868660405161047d93929190611823565b60405180910390a25050505050565b600061049782610306565b6104b4576040516312485c8960e11b815260040160405180910390fd5b506000908152600160205260409020600301546001600160a01b031690565b6104db610df8565b816104e581610306565b610502576040516312485c8960e11b815260040160405180910390fd5b6000818152600160205260409020600301546001600160a01b0316331461053b576040516282b42960e81b815260040160405180910390fd5b6001600160a01b03821661057b576040517fb6b8b2a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038216600090815260026020526040902054156105b25760405163a430873f60e01b815260040160405180910390fd5b600083815260016020526040808220600301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03861690811790915590519091339186917f900f0b7d796ac23c299d8b9ea7a0f715aad3bb4e1f5afd2000cdf36d82de42a291a4505050565b610625610d49565b6103046000610e52565b610637610df8565b8461064181610306565b61065e576040516312485c8960e11b815260040160405180910390fd5b6000818152600160205260409020600301546001600160a01b03163314610697576040516282b42960e81b815260040160405180910390fd5b600082815260046020526040902054156106c457604051633ab3447f60e11b815260040160405180910390fd5b60006107457fe10dceb9af22805112ef3cba7fb6ba4432a26e931a4f4b091cad893b042618528888886040516106fb929190611853565b60405190819003812061072a939291889060200193845260208401929092526040830152606082015260800190565b60405160208183030381529060405280519060200120610eaf565b905060006107538286610f18565b6003549091506001600160a01b0380831691161461078457604051638baa579f60e01b815260040160405180910390fd5b600088815260016020526040812060020180546107a0906116b0565b80601f01602080910402602001604051908101604052809291908181526020018280546107cc906116b0565b80156108195780601f106107ee57610100808354040283529160200191610819565b820191906000526020600020905b8154815290600101906020018083116107fc57829003601f168201915b50505060008c81526001602052604090209293505060029091019050610840888a83611739565b50887f5f2adde33903cdbdcc3d653702ed8f954dacf6edcca75f73d31eeeefa61e5b2a828a8a60405161087593929190611823565b60405180910390a2505050505050505050565b610890610d49565b610304610f3c565b6001602081905260009182526040909120805491810180546108b9906116b0565b80601f01602080910402602001604051908101604052809291908181526020018280546108e5906116b0565b80156109325780601f1061090757610100808354040283529160200191610932565b820191906000526020600020905b81548152906001019060200180831161091557829003601f168201915b505050505090806002018054610947906116b0565b80601f0160208091040260200160405190810160405280929190818152602001828054610973906116b0565b80156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b505050600390930154919250506001600160a01b031684565b6109e1610df8565b60008181526004602052604090205415610a0e57604051633ab3447f60e11b815260040160405180910390fd5b3360009081526002602052604090205415610a3c5760405163a430873f60e01b815260040160405180910390fd5b6000610acc7f34a7c079ef5ecd9b5540adcbd2df369beae7b2b3d3be5b53bd20703e223cb0e2338a8a604051610a73929190611853565b60405180910390208989604051610a8b929190611853565b60405190819003812061072a9493929188906020019485526001600160a01b0393909316602085015260408401919091526060830152608082015260a00190565b90506000610b1285858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508693925050610f189050565b6003549091506001600160a01b03808316911614610b4357604051638baa579f60e01b815260040160405180910390fd5b6000600560008154610b5490611863565b919050819055905060405180608001604052808281526020018b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250604080516020601f8c018190048102820181019092528a815291810191908b908b908190840183828082843760009201829052509385525050336020938401525083815260018083526040909120835181559183015190820190610c0a908261188a565b5060408201516002820190610c1f908261188a565b50606091909101516003909101805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0390921691909117905533600081815260026020526040908190208390555182907f0e495a78e01f57e15768b90aee1976ba20bae3dbee3a5ebc3a173ae5532334b990610ca0908e908e908e908e9061194a565b60405180910390a350505050505050505050565b610cbc610d49565b6001600160a01b038116610d3d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610d4681610e52565b50565b6000546001600160a01b031633146103045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d34565b610dab610f7f565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054600160a01b900460ff16156103045760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610d34565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610319610ebc610fd8565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610f2785856110ff565b91509150610f3481611144565b509392505050565b610f44610df8565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ddb3390565b600054600160a01b900460ff166103045760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610d34565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561103157507f000000000000000000000000000000000000000000000000000000000000000046145b1561105b57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036111355760208301516040840151606085015160001a611129878285856112a9565b9450945050505061113d565b506000905060025b9250929050565b60008160048111156111585761115861197c565b036111605750565b60018160048111156111745761117461197c565b036111c15760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610d34565b60028160048111156111d5576111d561197c565b036112225760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610d34565b60038160048111156112365761123661197c565b03610d465760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152608401610d34565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156112e05750600090506003611364565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611334573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661135d57600060019250925050611364565b9150600090505b94509492505050565b60006020828403121561137f57600080fd5b5035919050565b60008083601f84011261139857600080fd5b50813567ffffffffffffffff8111156113b057600080fd5b60208301915083602082850101111561113d57600080fd5b6000806000604084860312156113dd57600080fd5b83359250602084013567ffffffffffffffff8111156113fb57600080fd5b61140786828701611386565b9497909650939450505050565b80356001600160a01b038116811461142b57600080fd5b919050565b60006020828403121561144257600080fd5b61144b82611414565b9392505050565b6000806040838503121561146557600080fd5b8235915061147560208401611414565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806000608086880312156114ac57600080fd5b85359450602086013567ffffffffffffffff808211156114cb57600080fd5b6114d789838a01611386565b909650945060408801359150808211156114f057600080fd5b818801915088601f83011261150457600080fd5b8135818111156115165761151661147e565b604051601f8201601f19908116603f0116810190838211818310171561153e5761153e61147e565b816040528281528b602084870101111561155757600080fd5b82602086016020830137600092810160200192909252509699959850939660600135949350505050565b6000815180845260005b818110156115a75760208185018101518683018201520161158b565b506000602082860101526020601f19601f83011685010191505092915050565b8481526080602082015260006115e06080830186611581565b82810360408401526115f28186611581565b9150506001600160a01b038316606083015295945050505050565b60008060008060008060006080888a03121561162857600080fd5b873567ffffffffffffffff8082111561164057600080fd5b61164c8b838c01611386565b909950975060208a013591508082111561166557600080fd5b6116718b838c01611386565b909750955060408a013591508082111561168a57600080fd5b506116978a828b01611386565b989b979a50959894979596606090950135949350505050565b600181811c908216806116c457607f821691505b6020821081036116e457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561173457600081815260208120601f850160051c810160208610156117115750805b601f850160051c820191505b818110156117305782815560010161171d565b5050505b505050565b67ffffffffffffffff8311156117515761175161147e565b6117658361175f83546116b0565b836116ea565b6000601f84116001811461179957600085156117815750838201355b600019600387901b1c1916600186901b1783556117f3565b600083815260209020601f19861690835b828110156117ca57868501358255602094850194600190920191016117aa565b50868210156117e75760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6040815260006118366040830186611581565b82810360208401526118498185876117fa565b9695505050505050565b8183823760009101908152919050565b60006001820161188357634e487b7160e01b600052601160045260246000fd5b5060010190565b815167ffffffffffffffff8111156118a4576118a461147e565b6118b8816118b284546116b0565b846116ea565b602080601f8311600181146118ed57600084156118d55750858301515b600019600386901b1c1916600185901b178555611730565b600085815260208120601f198616915b8281101561191c578886015182559484019460019091019084016118fd565b508582101561193a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061195e6040830186886117fa565b82810360208401526119718185876117fa565b979650505050505050565b634e487b7160e01b600052602160045260246000fdfea26469706673582212205009a9bb46ff287a97b473e1576122b3964e3f928c5f579d594fff906db1c33064736f6c63430008110033";

type OrganizationControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OrganizationControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OrganizationController__factory extends ContractFactory {
  constructor(...args: OrganizationControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OrganizationController> {
    return super.deploy(overrides || {}) as Promise<OrganizationController>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OrganizationController {
    return super.attach(address) as OrganizationController;
  }
  override connect(signer: Signer): OrganizationController__factory {
    return super.connect(signer) as OrganizationController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OrganizationControllerInterface {
    return new utils.Interface(_abi) as OrganizationControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrganizationController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OrganizationController;
  }
}
